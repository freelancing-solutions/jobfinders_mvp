// Templates Schema - Resume Template System Models
// This file contains resume template and customization models

// Resume Templates
model ResumeTemplate {
  templateId      String   @id @default(cuid()) @map("template_id")
  name            String
  description     String
  category        String   // professional, modern, academic, creative, technical
  subcategory     String?  // executive, software-engineer, healthcare, etc.
  previewUrl      String   @map("preview_url") // URL to preview image
  largePreviewUrl String?  @map("large_preview_url") // URL to large preview
  animatedPreviewUrl String? @map("animated_preview_url") // URL to animated preview

  // Template configuration (JSON fields for flexibility)
  layout          Json     // TemplateLayout configuration
  styling         Json     // TemplateStyling configuration
  sections        Json     // TemplateSection[] configuration
  features        Json     // TemplateFeatures configuration
  atsOptimization Json     // ATSOptimization configuration
  customization   Json     // CustomizationOptions configuration
  metadata        Json     // TemplateMetadata configuration

  // Template status and availability
  isActive        Boolean  @default(true) @map("is_active")
  isPremium       Boolean  @default(false) @map("is_premium")
  version         String   @default("1.0.0")
  author          String?  // Template author
  license         String?  // Template license type

  // Usage analytics
  downloadCount   Int      @default(0) @map("download_count")
  rating          Float    @default(0)
  reviewCount     Int      @default(0) @map("review_count")

  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  // Relationships
  customizations  ResumeTemplateCustomization[]
  usage           ResumeTemplateUsage[]
  history         ResumeTemplateHistory[]
  resumes         Resume[]

  @@index([category])
  @@index([subcategory])
  @@index([isActive])
  @@index([isPremium])
  @@index([rating])
  @@index([downloadCount])
  @@map("resume_templates")
}

// Template Customizations
model ResumeTemplateCustomization {
  id              String   @id @default(cuid())
  userUid         String   @map("user_uid")
  resumeId        String?  @map("resume_id") // Optional: link to specific resume
  templateId      String   @map("template_id")

  // Customization data
  name            String?  // User-defined name for this customization
  colorScheme     Json     // Color customization data
  typography      Json     // Font customization data
  layout          Json     // Layout customization data
  sectionSettings Json     @map("section_settings") // Section visibility and ordering
  customSections  Json?    @map("custom_sections") // User-defined custom sections
  branding        Json?    // Logo, watermark, etc.

  // Metadata
  isDefault       Boolean  @default(false) @map("is_default")
  version         String   @default("1.0.0")
  changeCount     Int      @default(0) @map("change_count")
  lastApplied     DateTime? @map("last_applied")

  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  // Relationships
  user            User     @relation(fields: [userUid], references: [uid], onDelete: Cascade)
  template        ResumeTemplate @relation(fields: [templateId], references: [templateId], onDelete: Cascade)
  resume          Resume?  @relation(fields: [resumeId], references: [resumeId])
  usage           ResumeTemplateUsage[]

  @@unique([userUid, templateId, name])
  @@unique([resumeId]) // Add unique constraint for one-to-one relation
  @@index([userUid])
  @@index([templateId])
  @@index([resumeId])
  @@map("resume_template_customizations")
}

// Template Usage Analytics
model ResumeTemplateUsage {
  id              String   @id @default(cuid())
  userUid         String   @map("user_uid")
  templateId      String   @map("template_id")
  customizationId String?  @map("customization_id")
  resumeId        String?  @map("resume_id")

  // Usage metrics
  useCount        Int      @default(0) @map("use_count")
  lastUsed        DateTime? @map("last_used")
  averageAtsScore Float?  @default(0) @map("average_ats_score")
  exportCount     Int      @default(0) @map("export_count")

  // User feedback
  rating          Int?     // 1-5 rating
  feedback        String?  // User feedback text
  recommendationScore Float? @default(0) @map("recommendation_score") // How well template was recommended

  // Analytics data
  sessionDuration Int?     @map("session_duration") // Average session duration in seconds
  customizationCount Int?   @map("customization_count") // Number of customizations made
  shareCount      Int      @default(0) @map("share_count") // How many times shared

  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  // Relationships
  user            User                       @relation(fields: [userUid], references: [uid], onDelete: Cascade)
  template        ResumeTemplate             @relation(fields: [templateId], references: [templateId], onDelete: Cascade)
  customization   ResumeTemplateCustomization? @relation(fields: [customizationId], references: [id], onDelete: SetNull)
  resume          Resume?                    @relation(fields: [resumeId], references: [resumeId], onDelete: SetNull)

  @@unique([userUid, templateId])
  @@index([userUid])
  @@index([templateId])
  @@index([lastUsed])
  @@map("resume_template_usage")
}

// Template History Tracking
model ResumeTemplateHistory {
  id              String   @id @default(cuid())
  userUid         String   @map("user_uid")
  resumeId        String   @map("resume_id")
  templateId      String   @map("template_id")
  customizationId String?  @map("customization_id")

  // Action tracking
  action          String   // selected, customized, exported, reverted, shared, etc.
  templateName    String   @map("template_name") // Snapshot of template name at time of action

  // Change data
  previousState   Json?    @map("previous_state") // Previous template/customization state
  newState        Json?    @map("new_state") // New template/customization state
  changeSummary   String?  @map("change_summary") // Human-readable summary of changes
  changeReason    String?  @map("change_reason") // User-provided reason for change

  // Metadata
  sessionId       String?  @map("session_id") // For tracking user sessions
  ipAddress       String?  @map("ip_address") // For security analytics
  userAgent       String?  @map("user_agent") // Browser/client information

  createdAt       DateTime @default(now()) @map("created_at")

  // Relationships
  user            User     @relation(fields: [userUid], references: [uid], onDelete: Cascade)
  resume          Resume   @relation(fields: [resumeId], references: [resumeId], onDelete: Cascade)
  template        ResumeTemplate @relation(fields: [templateId], references: [templateId], onDelete: Cascade)

  @@index([userUid])
  @@index([resumeId])
  @@index([templateId])
  @@index([action])
  @@index([createdAt])
  @@map("resume_template_history")
}